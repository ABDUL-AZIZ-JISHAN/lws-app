{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdul\\\\Desktop\\\\final-app\\\\src\\\\components\\\\pages\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport { getDatabase, ref, set } from 'firebase/database';\nimport _ from 'lodash';\nimport { useEffect, useReducer, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport Answers from '../Answers';\nimport useQuestions from '../hooks/useQuestion';\nimport MiniPlayer from '../MiniPlayer';\nimport ProgressBar from '../ProgressBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = null;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"questions\":\n      action.value.forEach(question => {\n        question.options.forEach(option => {\n          option.checked = false;\n        });\n      });\n      return action.value;\n\n    case \"answer\":\n      const questions = _.cloneDeep(state);\n\n      questions[action.questionID].options[action.optionIndex].checked = action.value;\n      return questions;\n\n    default:\n      return state;\n  }\n};\n\nexport default function Quiz() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    error,\n    questions\n  } = useQuestions(id);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [qna, dispatch] = useReducer(reducer, initialState); // const { currentUser } = useAuth();\n  // const history = History();\n\n  useEffect(() => {\n    dispatch({\n      type: \"questions\",\n      value: questions\n    });\n  }, [questions]);\n\n  function handleAnswerChange(e, index) {\n    dispatch({\n      type: \"answer\",\n      questionID: currentQuestion,\n      optionIndex: index,\n      value: e.target.checked\n    });\n  }\n\n  function nextQuestion() {\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(prevCurrent => prevCurrent + 1);\n    }\n  }\n\n  function prevQuestion() {\n    if (currentQuestion >= 1 && currentQuestion <= questions.length) {\n      setCurrentQuestion(prevCurrent => prevCurrent - 1);\n    }\n  }\n\n  async function submit() {\n    const {\n      uid\n    } = currentUser;\n    const db = getDatabase();\n    const resultRef = ref(db, `result/${uid}`);\n    await set(resultRef, {\n      [id]: qna\n    });\n    history.push({\n      pathname: `/result/${id}`,\n      state: {\n        qna\n      }\n    });\n  }\n\n  const percentage = questions.length > 0 ? (currentQuestion + 1) / questions.length * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"There was an error!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 23\n    }, this), !loading && !error && qna && qna.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: qna[currentQuestion].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Question can have multiple answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Answers, {\n        options: qna[currentQuestion].options,\n        handleChange: handleAnswerChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        next: nextQuestion,\n        prev: prevQuestion,\n        submit: submit,\n        progress: percentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MiniPlayer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s(Quiz, \"G0iWIX4wSrls1zSYLnZP6BRqwmU=\", false, function () {\n  return [useParams, useQuestions];\n});\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["getDatabase","ref","set","_","useEffect","useReducer","useState","useParams","useAuth","Answers","useQuestions","MiniPlayer","ProgressBar","initialState","reducer","state","action","type","value","forEach","question","options","option","checked","questions","cloneDeep","questionID","optionIndex","Quiz","id","loading","error","currentQuestion","setCurrentQuestion","qna","dispatch","handleAnswerChange","e","index","target","nextQuestion","length","prevCurrent","prevQuestion","submit","uid","currentUser","db","resultRef","history","push","pathname","percentage","title"],"sources":["C:/Users/abdul/Desktop/final-app/src/components/pages/Quiz.js"],"sourcesContent":["import { getDatabase, ref, set } from 'firebase/database';\r\nimport _ from 'lodash';\r\nimport { useEffect, useReducer, useState } from 'react';\r\nimport {  useParams } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport Answers from '../Answers';\r\nimport useQuestions from '../hooks/useQuestion';\r\nimport MiniPlayer from '../MiniPlayer';\r\nimport ProgressBar from '../ProgressBar';\r\nconst initialState = null;\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"questions\":\r\n            action.value.forEach((question) => {\r\n                question.options.forEach((option) => {\r\n                    option.checked = false;\r\n                });\r\n            });\r\n            return action.value;\r\n        case \"answer\":\r\n            const questions = _.cloneDeep(state);\r\n            questions[action.questionID].options[action.optionIndex].checked =\r\n                action.value;\r\n\r\n            return questions;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default function Quiz() {\r\n    const { id } = useParams();\r\n    const { loading, error, questions } = useQuestions(id);\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\r\n    const [qna, dispatch] = useReducer(reducer, initialState);\r\n    // const { currentUser } = useAuth();\r\n    // const history = History();\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: \"questions\",\r\n            value: questions,\r\n        });\r\n    }, [questions]);\r\n\r\n    function handleAnswerChange(e, index) {\r\n        dispatch({\r\n            type: \"answer\",\r\n            questionID: currentQuestion,\r\n            optionIndex: index,\r\n            value: e.target.checked,\r\n        });\r\n    }\r\n\r\n   \r\n    function nextQuestion() {\r\n        if (currentQuestion + 1 < questions.length) {\r\n            setCurrentQuestion((prevCurrent) => prevCurrent + 1);\r\n        }\r\n    }\r\n\r\n   \r\n    function prevQuestion() {\r\n        if (currentQuestion >= 1 && currentQuestion <= questions.length) {\r\n            setCurrentQuestion((prevCurrent) => prevCurrent - 1);\r\n        }\r\n    }\r\n\r\n    \r\n    async function submit() {\r\n        const { uid } = currentUser;\r\n\r\n        const db = getDatabase();\r\n        const resultRef = ref(db, `result/${uid}`);\r\n\r\n        await set(resultRef, {\r\n            [id]: qna,\r\n        });\r\n\r\n        history.push({\r\n            pathname: `/result/${id}`,\r\n            state: {\r\n                qna,\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    const percentage =\r\n        questions.length > 0 ? ((currentQuestion + 1) / questions.length) * 100 : 0;\r\n\r\n    return (\r\n        <>\r\n            {loading && <div>Loading ...</div>}\r\n            {error && <div>There was an error!</div>}\r\n            {!loading && !error && qna && qna.length > 0 && (\r\n                <>\r\n                    <h1>{qna[currentQuestion].title}</h1>\r\n                    <h4>Question can have multiple answers</h4>\r\n                    <Answers\r\n                        options={qna[currentQuestion].options}\r\n                        handleChange={handleAnswerChange}\r\n                    />\r\n                    <ProgressBar\r\n                        next={nextQuestion}\r\n                        prev={prevQuestion}\r\n                        submit={submit}\r\n                        progress={percentage}\r\n                    />\r\n                    <MiniPlayer />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}