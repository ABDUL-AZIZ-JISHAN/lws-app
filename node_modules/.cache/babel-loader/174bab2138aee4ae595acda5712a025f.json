{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { get, getDatabase, orderByKey, query, ref } from 'firebase/database';\nimport { useEffect, useState } from 'react';\n\nconst UseVideoList = page => {\n  _s();\n\n  const [Loading, setLoading] = useState(true);\n  const [Error, setError] = useState();\n  const [Videos, setVideos] = useState([]);\n  useEffect(() => {\n    async function fetchVideos() {\n      const DB = getDatabase();\n      const VideoRef = ref(DB, 'videos');\n      const VideoQuery = query(VideoRef, orderByKey(), sta);\n\n      try {\n        setError(false);\n        setLoading(true);\n        const snapshot = await get(VideoQuery);\n        setLoading(false);\n\n        if (snapshot.exists()) {\n          setVideos(prev => {\n            return [...prev, Object.values(snapshot.val())];\n          });\n        }\n      } catch (err) {\n        console.log(err);\n        setLoading(false);\n        setError(true);\n      }\n    }\n\n    fetchVideos();\n  }, [page]);\n  return {\n    Loading,\n    Error,\n    Videos\n  };\n};\n\n_s(UseVideoList, \"dctP/fyYq2qet6pIi80KKz7YJ6U=\");\n\n_c = UseVideoList;\nexport default UseVideoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseVideoList\");","map":{"version":3,"names":["get","getDatabase","orderByKey","query","ref","useEffect","useState","UseVideoList","page","Loading","setLoading","Error","setError","Videos","setVideos","fetchVideos","DB","VideoRef","VideoQuery","sta","snapshot","exists","prev","Object","values","val","err","console","log"],"sources":["C:/Users/abdul/Desktop/final-app/src/components/hooks/useVideoList.js"],"sourcesContent":["import { get, getDatabase , orderByKey, query, ref } from 'firebase/database'\r\nimport { useEffect , useState} from 'react';\r\n\r\n\r\n\r\nconst UseVideoList = (page) => {\r\n\r\n\r\n    \r\nconst [Loading, setLoading] = useState(true)\r\nconst [Error , setError] = useState()\r\nconst [Videos , setVideos] = useState([])\r\n\r\n\r\n    useEffect(() =>{\r\n             async function fetchVideos(){\r\n                 const DB = getDatabase()\r\n                const VideoRef = ref(DB, 'videos')\r\n                const VideoQuery = query(VideoRef, orderByKey(), sta)\r\n\r\n\r\n                try{\r\n                    setError(false)\r\n                    setLoading(true)\r\n\r\n                    const snapshot = await get(VideoQuery);\r\n                    setLoading(false)\r\n\r\n                    if(snapshot.exists()){\r\n                        setVideos((prev) =>{\r\n                            return [...prev, Object.values(snapshot.val())]\r\n                        })\r\n                    }\r\n\r\n                }catch(err){\r\n                    console.log(err);\r\n                    setLoading(false)\r\n                    setError(true)\r\n                }\r\n                \r\n             }\r\n\r\n             fetchVideos()\r\n    },[page])\r\n    \r\n\r\n    return{\r\n        Loading,\r\n        Error,\r\n        Videos\r\n    }\r\n    \r\n}\r\n\r\nexport default UseVideoList;\r\n"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,WAAd,EAA4BC,UAA5B,EAAwCC,KAAxC,EAA+CC,GAA/C,QAA0D,mBAA1D;AACA,SAASC,SAAT,EAAqBC,QAArB,QAAoC,OAApC;;AAIA,MAAMC,YAAY,GAAIC,IAAD,IAAU;EAAA;;EAI/B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACK,KAAD,EAASC,QAAT,IAAqBN,QAAQ,EAAnC;EACA,MAAM,CAACO,MAAD,EAAUC,SAAV,IAAuBR,QAAQ,CAAC,EAAD,CAArC;EAGID,SAAS,CAAC,MAAK;IACN,eAAeU,WAAf,GAA4B;MACxB,MAAMC,EAAE,GAAGf,WAAW,EAAtB;MACD,MAAMgB,QAAQ,GAAGb,GAAG,CAACY,EAAD,EAAK,QAAL,CAApB;MACA,MAAME,UAAU,GAAGf,KAAK,CAACc,QAAD,EAAWf,UAAU,EAArB,EAAyBiB,GAAzB,CAAxB;;MAGA,IAAG;QACCP,QAAQ,CAAC,KAAD,CAAR;QACAF,UAAU,CAAC,IAAD,CAAV;QAEA,MAAMU,QAAQ,GAAG,MAAMpB,GAAG,CAACkB,UAAD,CAA1B;QACAR,UAAU,CAAC,KAAD,CAAV;;QAEA,IAAGU,QAAQ,CAACC,MAAT,EAAH,EAAqB;UACjBP,SAAS,CAAEQ,IAAD,IAAS;YACf,OAAO,CAAC,GAAGA,IAAJ,EAAUC,MAAM,CAACC,MAAP,CAAcJ,QAAQ,CAACK,GAAT,EAAd,CAAV,CAAP;UACH,CAFQ,CAAT;QAGH;MAEJ,CAbD,CAaC,OAAMC,GAAN,EAAU;QACPC,OAAO,CAACC,GAAR,CAAYF,GAAZ;QACAhB,UAAU,CAAC,KAAD,CAAV;QACAE,QAAQ,CAAC,IAAD,CAAR;MACH;IAEH;;IAEDG,WAAW;EACnB,CA7BQ,EA6BP,CAACP,IAAD,CA7BO,CAAT;EAgCA,OAAM;IACFC,OADE;IAEFE,KAFE;IAGFE;EAHE,CAAN;AAMH,CA/CD;;GAAMN,Y;;KAAAA,Y;AAiDN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}